{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","label","input","type","onChange","pattern","title","required","button","Component","ContactList","contacts","onDeleteContact","contactList","map","id","onClick","Filter","App","filter","formSubmitHandler","data","console","log","addContact","uuidv4","nameNormalize","toLowerCase","find","contact","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","savedContacts","localStorage","getItem","parcedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a3da14c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3a9wg\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\r\n\r\nContainer.propTypes = {    \r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit =e => {\r\n    e.preventDefault();\r\n\r\n    const {name, number} = this.state\r\n\r\n    this.props.onSubmit({name, number});    \r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({name: '', number: '',});\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}           \r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}           \r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({    \r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  )\r\n};\r\n\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={s.name} key={id}>\r\n          {name}: <span className={s.number}>{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            className={s.button}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,      \r\n    }),\r\n  )\r\n};\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n   Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} className={s.input}/>\r\n  </label>\r\n);\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport Container from 'components/Container/Container';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {  \n    const savedContacts = localStorage.getItem('contacts');\n    const parcedContacts = JSON.parse(savedContacts);\n    if(parcedContacts) {\n      this.setState({contacts: parcedContacts});\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {   \n    if(this.state.contacts !== prevState.contacts) {     \n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  addContact = ({ name, number }) => {\n    const data = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const { contacts } = this.state;\n    const nameNormalize = name.toLowerCase();\n\n    const checkedName = contacts.find(\n      contact => nameNormalize === contact.name.toLowerCase(),\n    );\n\n    checkedName\n      ? alert(`${name} is already in contacts!`)\n      : this.setState(({ contacts }) => ({\n          contacts: [...contacts, data],\n        }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__14iQT\",\"label\":\"ContactForm_label__1lw2B\",\"input\":\"ContactForm_input__3A7zC\",\"button\":\"ContactForm_button__3Dbz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2zQH0\",\"name\":\"ContactList_name__1PdK8\",\"number\":\"ContactList_number__2bpJJ\",\"button\":\"ContactList_button__1cqdP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2hXyj\",\"input\":\"Filter_input__3rE33\"};"],"sourceRoot":""}